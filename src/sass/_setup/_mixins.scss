/* Font face */
@mixin font-face($name, $filename) {
    @font-face {
        font-family: $name;
        src: url($fontPath + '#{$filename}.eot');
        src: url($fontPath + '#{$filename}.eot?#iefix') format('embedded-opentype'),
             url($fontPath + '#{$filename}.woff2') format('woff2'),
             url($fontPath + '#{$filename}.woff') format('woff'),
             url($fontPath + '#{$filename}.ttf') format('truetype'),
             url($fontPath + '#{$filename}.svg##{$name}') format('svg');
        font-weight: normal;
        font-style: normal;
    }
}


/* Float container collapse fix */
@mixin clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}


/* Reset lists */
@mixin reset-list {
    margin: 0;
    padding: 0;
    list-style: none;
}


/* Reset buttons */
@mixin reset-button {
    margin: 0;
    padding: 0;
    background: none;
    border: 0;
    outline: 0;
}


/* Text replacement */
@mixin text-replacement($width, $height, $image) {
    display: block;
    width: $width;
    height: $height;
    background: url($image) center center no-repeat;
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}


/* Visually hide an element */
@mixin visually-hidden {
    position: absolute;
    margin: -1px;
    padding: 0;
    width: 1px;
    height: 1px;
    border: 0;
    clip: rect(0 0 0 0);
    overflow: hidden;
}


/* Transform mixins */
// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// rotate
@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// translate
@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}

// skew
@mixin skew($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

// transform origin
@mixin transform-origin($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

// transitions
@mixin transition($transition-property, $transition-time, $easing) {
    -webkit-transition: $transition-property $transition-time $easing;
    transition: $transition-property $transition-time $easing;
}


/* Gradients */
@mixin linear-gradient-rgba($direction: 135deg, $startColor: #fff, $stopColor: #000, $startPos: 0%, $endPos: 100%) {
    background: $startColor; // fallback
    background: -ms-linear-gradient($direction, $startColor $startPos, $stopColor $endPos); // IE 10+
    background: -moz-linear-gradient($direction, $startColor $startPos, $stopColor $endPos); // FF ?+
    background: linear-gradient($direction, $startColor $startPos, $stopColor $endPos); // W3C
}
@mixin linear-gradient($direction: 135deg, $startColor: #fff, $stopColor: #000, $startPos: 0%, $endPos: 100%) {
    @include linear-gradient-rgba($direction, $startColor, $stopColor, $startPos, $endPos);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$startColor}', endColorstr='#{$stopColor}', GradientType=1 ); // IE6-9 fallback on horizontal gradient
}
